-- Generated from openc2.jasn, Mon Sep 12 09:02:42 2016

/*
title:         OpenC2 Command Definitions
version:       0.1
description:   Classes that define the content of OpenC2 commands.  These
               classes are used with an Encoder/Decoder (codec) to serialize and
               deserialize commands for transmission in a format such as JSON,
               XML, or CBOR, or to generate format-specific message schemas.
namespace:     http://openc2.org/objects
root:          Root type: OpenC2Command
               Default ns: openc2
import:        http://cybox.mitre.org/common-2: cybox
               http://docs.oasis-open.org/CTI/cybox-3: cybox3
*/

Action ::= ENUMERATED {
    scan         (1),
    locate       (2),
    query        (3),
    report       (4),
    get          (5),
    notify       (6),
    deny         (7),
    contain      (8),
    allow        (9),
    start        (10),
    stop         (11),
    restart      (12),
    pause        (13),
    resume       (14),
    cancel       (15),
    set          (16),
    update       (17),
    move         (18),
    redirect     (19),
    delete       (20),
    snapshot     (21),
    detonate     (22),
    restore      (23),
    save         (24),
    modify       (25),
    throttle     (26),
    delay        (27),
    substitute   (28),
    copy         (29),
    sync         (30),
    distill      (31),
    augment      (32),
    investigate  (33),
    mitigate     (34),
    remediate    (35),
    response     (36),
    alert        (37)
}

TargetType ::= ENUMERATED {
    cybox:Address              (1),
    cybox:Device               (2),
    cybox:Disk                 (3),
    cybox:Disk_Partition       (4),
    cybox:Domain_Name          (5),
    cybox:Email_Message        (6),
    cybox:File                 (7),
    cybox:Hostname             (8),
    cybox:Memory               (9),
    cybox:Network_Connection   (10),
    cybox:Network_Flow         (11),
    cybox:Network_Packet       (12),
    cybox:Network_Subnet       (13),
    cybox:Port                 (14),
    cybox:Process              (15),
    cybox:Product              (16),
    cybox:Socket_Address       (17),
    cybox:System               (18),
    cybox:URI                  (19),
    cybox:User_Account         (20),
    cybox:User_Session         (21),
    cybox:Volume               (22),
    cybox:Windows_Registry_Key (23),
    cybox:Windows_Service      (24),
    cybox:X509_Certificate     (25),
    Data                       (1),
    cybox3                     (2)
}

ActuatorType ::= ENUMERATED {
    endpoint                         (1),
    endpoint-digital-telephone-handset (2),
    endpoint-laptop                  (3),
    endpoint-pos-terminal            (4),
    endpoint-printer                 (5),
    endpoint-sensor                  (6),
    endpoint-server                  (7),
    endpoint-smart-meter             (8),
    endpoint-smart-phone             (9),
    endpoint-tablet                  (10),
    endpoint-workstation             (11),
    network                          (12),
    network-bridge                   (13),
    network-firewall                 (14),
    network-gateway                  (15),
    network-guard                    (16),
    network-hips                     (17),
    network-hub                      (18),
    network-ids                      (19),
    network-ips                      (20),
    network-modem                    (21),
    network-nic                      (22),
    network-proxy                    (23),
    network-router                   (24),
    network-security-manager         (25),
    network-sense-making             (26),
    network-sensor                   (27),
    network-switch                   (28),
    network-vpn                      (29),
    network-wap                      (30),
    process                          (31),
    process-aaa-server               (32),
    process-anti-virus-scanner       (33),
    process-connection-scanner       (34),
    process-directory-server         (35),
    process-dns-server               (36),
    process-email-service            (37),
    process-file-scanner             (38),
    process-location-service         (39),
    process-network-scanner          (40),
    process-remediation-service      (41),
    process-reputation-service       (42),
    process-sandbox                  (43),
    process-virtualization-service   (44),
    process-vulnerability-scanner    (45)
}

Target ::= RECORD {
    type         [1] TargetType,
    specifiers   [2] cybox:CyboxObject?,{type}
}

ActuatorSpecifiers ::= RECORD {
    port         [1] UTF8STRING?,
    asset_id     [2] UTF8STRING?
}

ActuatorObject ::= ATTRIBUTE {
    endpoint                         [1] ActuatorSpecifiers,
    endpoint-digital-telephone-handset [2] ActuatorSpecifiers,
    endpoint-laptop                  [3] ActuatorSpecifiers,
    endpoint-pos-terminal            [4] ActuatorSpecifiers,
    endpoint-printer                 [5] ActuatorSpecifiers,
    endpoint-sensor                  [6] ActuatorSpecifiers,
    endpoint-server                  [7] ActuatorSpecifiers,
    endpoint-smart-meter             [8] ActuatorSpecifiers,
    endpoint-smart-phone             [9] ActuatorSpecifiers,
    endpoint-tablet                  [10] ActuatorSpecifiers,
    endpoint-workstation             [11] ActuatorSpecifiers,
    network                          [12] ActuatorSpecifiers,
    network-bridge                   [13] ActuatorSpecifiers,
    network-firewall                 [14] ActuatorSpecifiers,
    network-gateway                  [15] ActuatorSpecifiers,
    network-guard                    [16] ActuatorSpecifiers,
    network-hips                     [17] ActuatorSpecifiers,
    network-hub                      [18] ActuatorSpecifiers,
    network-ids                      [19] ActuatorSpecifiers,
    network-ips                      [20] ActuatorSpecifiers,
    network-modem                    [21] ActuatorSpecifiers,
    network-nic                      [22] ActuatorSpecifiers,
    network-proxy                    [23] ActuatorSpecifiers,
    network-router                   [24] ActuatorSpecifiers,
    network-security-manager         [25] ActuatorSpecifiers,
    network-sense-making             [26] ActuatorSpecifiers,
    network-sensor                   [27] ActuatorSpecifiers,
    network-switch                   [28] ActuatorSpecifiers,
    network-vpn                      [29] ActuatorSpecifiers,
    network-wap                      [30] ActuatorSpecifiers,
    process                          [31] ActuatorSpecifiers,
    process-aaa-server               [32] ActuatorSpecifiers,
    process-anti-virus-scanner       [33] ActuatorSpecifiers,
    process-connection-scanner       [34] ActuatorSpecifiers,
    process-directory-server         [35] ActuatorSpecifiers,
    process-dns-server               [36] ActuatorSpecifiers,
    process-email-service            [37] ActuatorSpecifiers,
    process-file-scanner             [38] ActuatorSpecifiers,
    process-location-service         [39] ActuatorSpecifiers,
    process-network-scanner          [40] ActuatorSpecifiers,
    process-remediation-service      [41] ActuatorSpecifiers,
    process-reputation-service       [42] ActuatorSpecifiers,
    process-sandbox                  [43] ActuatorSpecifiers,
    process-virtualization-service   [44] ActuatorSpecifiers,
    process-vulnerability-scanner    [45] ActuatorSpecifiers
}

Actuator ::= RECORD {
    type         [1] UTF8STRING,
    specifiers   [2] ActuatorObject?,{type}
}

ResponseValue ::= ENUMERATED {
    ack          (1),
    status       (2)
}

MethodValue ::= ENUMERATED {
    acl          (1),
    blackhole    (2),
    sinkhole     (3),
    blacklist    (4),
    whitelist    (5)
}

WhereValue ::= ENUMERATED {
    internal     (1),
    perimeter    (2)
}

Modifiers ::= MAP {
    delay        [1] UTF8STRING?,<timeinterval>,
    duration     [2] UTF8STRING?,<timeinterval>,
    frequency    [3] UTF8STRING?,<timerecurrence>,
    response     [4] ResponseValue?,
    time         [5] UTF8STRING?,<time>,
    method       [6] MethodValue?,
    where        [7] WhereValue?
}

OpenC2Command ::= RECORD {
    action       [1] Action,
    target       [2] Target,
    actuator     [3] Actuator?,
    modifiers    [4] Modifiers?
}
